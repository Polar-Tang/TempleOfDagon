# Set a cache path in the http context

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mycache:10m inactive=60m use_temp_path=off;
    log_format cache_log '$remote_addr - $upstream_cache_status [$time_local] "$request"';
    access_log /var/log/nginx/cache.log cache_log; 
    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            index index.html;
            # all the 404 are redirected to index.html
            try_files $uri /index.html;
        }
        # Example of reverse proxy, separate front end and back end
        location /api/ {
            proxy_pass http://localhost:3000;
            proxy_redirect default;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' true;
                add_header 'Access-Control-Allow-Origin' 'http://127.0.0.1:5000';
            }
            
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' true;
                add_header 'Access-Control-Allow-Origin' 'http://127.0.0.1:5000';
            }
        if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Credentials' true;
                add_header 'Access-Control-Allow-Origin' 'http://127.0.0.1:5000';
            }
        }

         # if a req end with slash, nginx treat it as a directory and try to find index file in the directory
        location /uploads/ {
            proxy_pass http://localhost:3000/uploads/;
            proxy_cache mycache;
            proxy_cache_key "$request_uri";
            proxy_cache_valid 200 10m;
            proxy_cache_methods GET HEAD;
            add_header X-Cache-Status $upstream_cache_status;
            proxy_pass_header on;

            # CORS
            proxy_set_header 'Access-Control-Allow-Origin' 'http://127.0.0.1:5000';
            proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            proxy_set_header 'Access-Control-Allow-Credentials' 'true';

        }
        
    }
    # server {
    #     listen 5000;

    #     location / {
    #         root /data/www;
    #         index index.html;
    #         # all the 404 are redirected to index.html
    #         try_files $uri /index.html;
    # }
}